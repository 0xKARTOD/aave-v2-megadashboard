WITH temp_table AS (
SELECT 
    evt_block_time,
    tr."from" AS address,
    -tr.value AS amount,
    contract_address
FROM erc20."ERC20_evt_Transfer" tr
WHERE contract_address = '\x4da27a545c0c5B758a6BA100e3a049001de870f5' -- Staked Aave (stkAAVE)

UNION ALL

SELECT
    evt_block_time,
    tr."to" AS address,
    tr.value AS amount,
    contract_address
FROM erc20."ERC20_evt_Transfer" tr
WHERE contract_address = '\x4da27a545c0c5B758a6BA100e3a049001de870f5' -- Staked Aave (stkAAVE)
), 

price AS (
    SELECT
        date_trunc('day', minute) as day,
        avg(price) AS price
    FROM prices."usd"
    WHERE symbol = 'AAVE'
    group by 1
),

temp_table2 AS (
SELECT
    address,
    SUM(amount/10^18) AS balance
FROM temp_table tr
GROUP BY 1
ORDER BY 2 DESC
), 

temp_table3 AS (
SELECT
    address,
    balance
FROM temp_table2 a
WHERE balance > 0
), 

final_table AS ( 
SELECT
    DISTINCT(t.address) AS address,
    balance,
    string_agg(name, ', ') AS label   -- aggregate multiple labels for the same address
FROM temp_table3 t
LEFT JOIN labels."labels" l ON t.address = l.address
--WHERE name = 'borrower' or name = 'loan collateral supplier'
--WHERE name = 'loan collateral supplier'
GROUP BY 1, 2            -- group by address, balance to avoid duplicate address
ORDER BY balance DESC
),
---------------------------------------------------

DB AS ( 
SELECT 
    date_trunc('day', "call_block_time") as day,
    aave."user",
     "output_totalDebtETH"/ "output_totalCollateralETH" AS "TCR"
FROM aave_v2."LendingPool_call_getUserAccountData" aave
LEFT JOIN final_table t ON t.address = aave."user"
WHERE "output_totalCollateralETH"<>0
),
------------------------------------------------------------------------------
TCR_per_user AS (
SELECT 
    "user",
    avg("TCR") AS "TCR"
FROM DB
WHERE day IN (SELECT max(day) OVER (PARTITION BY "user") FROM DB)
GROUP BY 1
),
------------------------------------------------------------------------------


table_TCR_per_balance AS (
SELECT
    f.address AS address,
    f.balance*p.price AS balance_usd,
    t."TCR" AS TCR,
    CASE WHEN label isnull THEN 'smart contract' ELSE label END AS label
FROM final_table f
LEFT JOIN TCR_per_user t ON t."user" = f.address
LEFT JOIN price p ON p.day = DATE_TRUNC('day',now())
order by balance_usd desc
)

SELECT
    address,
    balance_usd,
    TCR*100 AS TCR,
    label
FROM table_TCR_per_balance
WHERE TCR > 0
order by balance_usd desc
LIMIT 50